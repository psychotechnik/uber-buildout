[buildout]

run-dir = ${buildout:directory}/var/run
spool-dir = ${buildout:directory}/var/spool

parts = ${uwsgi-parts:parts} ${nginx-parts:parts}

[uwsgi-parts]
parts = 
    uwsgi
    uwsgi-touch-to-reload
    spool-dir
    run-dir
    log-dir
    set-permissions
    bash-aliases

[nginx-parts]
parts = nginx-config nginx-config-install


############################################################
### uwsgi specific configuration
###
[uwsgi-server]
project_name=${buildout:project_name}
host=${buildout:global-server-hostname}
venv_name=${buildout:virtualenv-name}
user=www-data
socket-port=${buildout:uwsgi-socket-port}
db_name = ${buildout:virtualenv-name}
db_user = web
db_host = 127.0.0.1
nginx-conf-path = /etc/nginx

[uwsgi]
recipe=unweb.recipe.uwsgi
uid=${uwsgi-server:user}
home=${buildout:directory}
pythonpath=${buildout:directory}/${buildout:project_name}
wsgi-file=${buildout:bin-directory}/django.wsgi
wsgilog=${buildout:directory}/log/uwsgi.log
env=DJANGO_SETTINGS_MODULE=${buildout:project_name}.settings
pidfile=${buildout:run-dir}${uwsgi-server:venv_name}.pid
socket=127.0.0.1:${uwsgi-server:socket-port}
single-interpreter=true
master=True
eggs=Django
daemonize=${buildout:directory}/log/uwsgi.log
log-master=true
spooler = ${buildout:spool-dir}
import=uwsgiutils.tasks


[log-dir]
recipe = z3c.recipe.mkdir
paths = log

[spool-dir]
recipe = z3c.recipe.mkdir
paths = var/spool

[run-dir]
recipe = z3c.recipe.mkdir
paths = var/run

[set-permissions]
recipe = cp.recipe.cmd
shell = /bin/bash
install_cmd = 
    sudo chown ${uwsgi-server:user} -R ${buildout:directory}/var
    sudo chown ${uwsgi-server:user} -R ${buildout:directory}/log
update_cmd = ${set-permissions:install_cmd}

[uwsgi-touch-to-reload]
recipe = collective.recipe.template
output = ${buildout:spool-dir}/touchme.to.reload
inline =

[bash-aliases]
recipe = collective.recipe.template
output = ${buildout:parts-directory}/etc/${uwsgi-server:venv_name}.bash.aliases
inline = 
    alias run${uwsgi-server:venv_name}='sudo su root -c "${buildout:bin-directory}/uwsgi  --workers=1 --xml=${buildout:parts-directory}/uwsgi/uwsgi.xml"'
    #alias restart-${uwsgi-server:venv_name}='sudo kill -HUP `cat ${uwsgi:pidfile}`'
    alias restart-${uwsgi-server:venv_name}='touch ${buildout:spool-dir}/touchme.to.reload'
    alias stop-${uwsgi-server:venv_name}='sudo kill -INT `cat ${uwsgi:pidfile}`'
    alias tail-${uwsgi-server:venv_name}='multitail ${buildout:directory}/log/${uwsgi-server:venv_name}.log ${buildout:directory}/log/uwsgi.log'

############################################################
### nginx specific configuration
###
[nginx-config]
recipe = collective.recipe.template
output = ${buildout:parts-directory}/etc/${uwsgi-server:host}.nginx.conf
inline =
    server {
        listen   80;
        server_name ${buildout:global-server-hostname};

        access_log /var/log/nginx/${buildout:global-server-hostname}.access.log;
        error_log /var/log/nginx/${buildout:global-server-hostname}.error.log;

        location / {
            include uwsgi_params;
            include proxy.conf;
            uwsgi_pass 127.0.0.1:${uwsgi-server:socket-port};
        }
        location /media {
            alias "${buildout:directory}/${buildout:project_name}/${buildout:project_name}/media";
        }
        location /static {
            alias "${buildout:directory}/${buildout:project_name}/static";
        }

    }

[nginx-config-install]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/install_nginx
mode = 755
inline =
    sudo rm ${uwsgi-server:nginx-conf-path}/sites-available/${uwsgi-server:host}.nginx.conf
    sudo rm ${uwsgi-server:nginx-conf-path}/sites-enabled/${uwsgi-server:host}.nginx.conf
    sudo ln -s ${buildout:parts-directory}/etc/${uwsgi-server:host}.nginx.conf ${uwsgi-server:nginx-conf-path}/sites-available/${uwsgi-server:host}.nginx.conf
    sudo ln -s ${uwsgi-server:nginx-conf-path}/sites-available/${uwsgi-server:host}.nginx.conf  ${uwsgi-server:nginx-conf-path}/sites-enabled/${uwsgi-server:host}.nginx.conf
    sudo service nginx restart
